<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	
	<!-- 字符编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
    <servlet>
        <servlet-name>SSH</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- contextConfigLocation 配置SpringMvc加载的配置文件(配置的处理器、映射器、适配器等) 
             如果没有配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-servlet.xml()
        -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-context.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>SSH</servlet-name>
        <!-- 
            第一种: *.action 访问以.action结尾的请求地址，由DispatcherServlet进行解析
            第二种: / 所有的访问地址都由DispatcherServlet进行解析，包括了静态资源文件，此种方式可以实现RESTful 风格的url
            第三种: /* 这种配置是不对的
        -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>		
	
	
	
</web-app>
